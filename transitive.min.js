;(function(){

/**
 * Require the given path.
 *
 * @param {String} path
 * @return {Object} exports
 * @api public
 */

function require(path, parent, orig) {
  var resolved = require.resolve(path);

  // lookup failed
  if (null == resolved) {
    orig = orig || path;
    parent = parent || 'root';
    var err = new Error('Failed to require "' + orig + '" from "' + parent + '"');
    err.path = orig;
    err.parent = parent;
    err.require = true;
    throw err;
  }

  var module = require.modules[resolved];

  // perform real require()
  // by invoking the module's
  // registered function
  if (!module._resolving && !module.exports) {
    var mod = {};
    mod.exports = {};
    mod.client = mod.component = true;
    module._resolving = true;
    module.call(this, mod.exports, require.relative(resolved), mod);
    delete module._resolving;
    module.exports = mod.exports;
  }

  return module.exports;
}

/**
 * Registered modules.
 */

require.modules = {};

/**
 * Registered aliases.
 */

require.aliases = {};

/**
 * Resolve `path`.
 *
 * Lookup:
 *
 *   - PATH/index.js
 *   - PATH.js
 *   - PATH
 *
 * @param {String} path
 * @return {String} path or null
 * @api private
 */

require.resolve = function(path) {
  if (path.charAt(0) === '/') path = path.slice(1);

  var paths = [
    path,
    path + '.js',
    path + '.json',
    path + '/index.js',
    path + '/index.json'
  ];

  for (var i = 0; i < paths.length; i++) {
    var path = paths[i];
    if (require.modules.hasOwnProperty(path)) return path;
    if (require.aliases.hasOwnProperty(path)) return require.aliases[path];
  }
};

/**
 * Normalize `path` relative to the current path.
 *
 * @param {String} curr
 * @param {String} path
 * @return {String}
 * @api private
 */

require.normalize = function(curr, path) {
  var segs = [];

  if ('.' != path.charAt(0)) return path;

  curr = curr.split('/');
  path = path.split('/');

  for (var i = 0; i < path.length; ++i) {
    if ('..' == path[i]) {
      curr.pop();
    } else if ('.' != path[i] && '' != path[i]) {
      segs.push(path[i]);
    }
  }

  return curr.concat(segs).join('/');
};

/**
 * Register module at `path` with callback `definition`.
 *
 * @param {String} path
 * @param {Function} definition
 * @api private
 */

require.register = function(path, definition) {
  require.modules[path] = definition;
};

/**
 * Alias a module definition.
 *
 * @param {String} from
 * @param {String} to
 * @api private
 */

require.alias = function(from, to) {
  if (!require.modules.hasOwnProperty(from)) {
    throw new Error('Failed to alias "' + from + '", it does not exist');
  }
  require.aliases[to] = from;
};

/**
 * Return a require function relative to the `parent` path.
 *
 * @param {String} parent
 * @return {Function}
 * @api private
 */

require.relative = function(parent) {
  var p = require.normalize(parent, '..');

  /**
   * lastIndexOf helper.
   */

  function lastIndexOf(arr, obj) {
    var i = arr.length;
    while (i--) {
      if (arr[i] === obj) return i;
    }
    return -1;
  }

  /**
   * The relative require() itself.
   */

  function localRequire(path) {
    var resolved = localRequire.resolve(path);
    return require(resolved, parent, path);
  }

  /**
   * Resolve relative to the parent.
   */

  localRequire.resolve = function(path) {
    var c = path.charAt(0);
    if ('/' == c) return path.slice(1);
    if ('.' == c) return require.normalize(p, path);

    // resolve deps by returning
    // the dep in the nearest "deps"
    // directory
    var segs = parent.split('/');
    var i = lastIndexOf(segs, 'deps') + 1;
    if (!i) i = 0;
    path = segs.slice(0, i + 1).join('/') + '/deps/' + path;
    return path;
  };

  /**
   * Check if module is defined at `path`.
   */

  localRequire.exists = function(path) {
    return require.modules.hasOwnProperty(localRequire.resolve(path));
  };

  return localRequire;
};
require.register("component-to-function/index.js", function(exports, require, module){
function toFunction(n){switch({}.toString.call(n)){case"[object Object]":return objectToFunction(n);case"[object Function]":return n;case"[object String]":return stringToFunction(n);case"[object RegExp]":return regexpToFunction(n);default:return defaultToFunction(n)}}function defaultToFunction(n){return function(t){return n===t}}function regexpToFunction(n){return function(t){return n.test(t)}}function stringToFunction(n){return/^ *\W+/.test(n)?new Function("_","return _ "+n):new Function("_","return _."+n)}function objectToFunction(n){var t={};for(var o in n)t[o]="string"==typeof n[o]?defaultToFunction(n[o]):toFunction(n[o]);return function(n){if("object"!=typeof n)return!1;for(var o in t){if(!(o in n))return!1;if(!t[o](n[o]))return!1}return!0}}module.exports=toFunction;
});
require.register("component-type/index.js", function(exports, require, module){
var toString=Object.prototype.toString;module.exports=function(e){switch(toString.call(e)){case"[object Function]":return"function";case"[object Date]":return"date";case"[object RegExp]":return"regexp";case"[object Arguments]":return"arguments";case"[object Array]":return"array";case"[object String]":return"string"}return null===e?"null":void 0===e?"undefined":e&&1===e.nodeType?"element":e===Object(e)?"object":typeof e};
});
require.register("component-each/index.js", function(exports, require, module){
function string(t,r){for(var e=0;e<t.length;++e)r(t.charAt(e),e)}function object(t,r){for(var e in t)has.call(t,e)&&r(e,t[e])}function array(t,r){for(var e=0;e<t.length;++e)r(t[e],e)}var toFunction=require("to-function"),type;try{type=require("type-component")}catch(e){type=require("type")}var has=Object.prototype.hasOwnProperty;module.exports=function(t,r){switch(r=toFunction(r),type(t)){case"array":return array(t,r);case"object":return"number"==typeof t.length?array(t,r):object(t,r);case"string":return string(t,r)}};
});
require.register("styler/computed.js", function(exports, require, module){
module.exports=[];
});
require.register("styler/index.js", function(exports, require, module){
function Styler(t,e){return this instanceof Styler?(this.computed=require("./computed"),this.static=require("./static"),t&&this.load(t),e&&(this.computed=this.computed.push(e)),void 0):new Styler}function applyAttrAndStyle(t,e,i){function n(t){return function(n,o){return isFunction(t)?t.call(i,n,e,o):t}}for(var o in i){var r=isStyle(o)?"style":"attr";t[r](o,n(i[o]))}}function isFunction(t){return"[object Function]"===Object.prototype.toString.call(t)}function isStyle(t){return-1!==styles.indexOf(t)}var each=require("each"),styles=["color","fill","font","font-family","font-size","stroke","stroke-width"];module.exports=Styler,Styler.prototype.load=function(t){each(t,function(t,e){this.static[e]?each(t,function(t,i){this.static[e][i]=t}.bind(this)):this.static[e]=t}.bind(this))},Styler.prototype.render=function(t,e){each(this.static,function(i,n){applyAttrAndStyle(t.svgGroup.selectAll(n),e,i)}),each(this.computed,function(i){i(t,e)})};
});
require.register("styler/static.js", function(exports, require, module){
module.exports={".stop-circle":{cx:0,cy:0,fill:"white",r:5,stroke:"none"},".stop-label":{"font-family":"sans-serif","font-size":function(t){return"S3"===t.stop.stop_id?"20px":"12px"},transform:function(){return"rotate(-45, "+this.x+", "+this.y+")"},visibility:function(t,i){return i.zoom.scale()<.75?"hidden":"visible"},x:0,y:-12},".line":{stroke:"blue","stroke-width":"15px",fill:"none"}};
});
require.register("app/index.js", function(exports, require, module){
function Transitive(e,t,i,r){return this instanceof Transitive?(this.el=e,this.styler=new Styler(i,r),this.load(t),this.render(),void 0):new Transitive}var Styler=require("styler");module.exports=Transitive,Transitive.prototype.render=function(){},Transitive.prototype.setElement=function(e){this.el=e,this.render()};
});
require.register("transitive/index.js", function(exports, require, module){
module.exports=require("app");
});


require.alias("app/index.js", "transitive/deps/app/index.js");
require.alias("app/index.js", "app/index.js");
require.alias("styler/computed.js", "app/deps/styler/computed.js");
require.alias("styler/index.js", "app/deps/styler/index.js");
require.alias("styler/static.js", "app/deps/styler/static.js");
require.alias("component-each/index.js", "styler/deps/each/index.js");
require.alias("component-to-function/index.js", "component-each/deps/to-function/index.js");

require.alias("component-type/index.js", "component-each/deps/type/index.js");

require.alias("transitive/index.js", "transitive/index.js");if (typeof exports == "object") {
  module.exports = require("transitive");
} else if (typeof define == "function" && define.amd) {
  define(function(){ return require("transitive"); });
} else {
  this["Transitive"] = require("transitive");
}})();